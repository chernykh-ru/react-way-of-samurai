{"version":3,"sources":["components/common/FormsControls/FormsControls.module.css","components/common/FormsControls/FormsControls.jsx","utils/validators/validators.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/MyPosts.module.css","assets/images/avataaars.png","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","FormControl","input","meta","props","child","hasError","touched","error","className","styles","formControl","children","Textarea","restProps","Input","required","value","maxLengthCreator","maxLength","length","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","e","target","onBlur","updateStatus","autoFocus","onDoubleClick","ProfileInfo","profile","descriptionBlock","userPhoto","src","photos","large","avataaars","alt","fullName","aboutMe","userId","statusBlock","Preloader","Post","item","width","height","message","like","likeCounter","maxLength30","AddPostFormRedux","reduxForm","form","handleSubmit","onSubmit","postBlock","Field","component","name","placeholder","validate","MyPosts","React","memo","postsElements","posts","reverse","map","p","i","postsBlock","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","this","match","params","autorizedUserId","history","push","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/4.4919a1f5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginFormWrapper\":\"FormsControls_loginFormWrapper__QJkSz\",\"formControl\":\"FormsControls_formControl__ZczVY\",\"error\":\"FormsControls_error__-uRCD\",\"formSummaryError\":\"FormsControls_formSummaryError__2HC3s\"};","import styles from './FormsControls.module.css';\r\n\r\nexport const FormControl = ({ input, meta, child, ...props }) => {\r\n  const hasError = meta.touched && meta.error;\r\n\r\n  return (\r\n    <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n      <div>{props.children}</div>\r\n      {hasError && <span>{meta.error}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n  const { input, meta, child, ...restProps } = props;\r\n\r\n  return (\r\n    <FormControl {...props}>\r\n      <textarea {...input} {...restProps} />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport const Input = (props) => {\r\n  const { input, meta, child, ...restProps } = props;\r\n\r\n  return (\r\n    <FormControl {...props}>\r\n      <input {...input} {...restProps} />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\n// export const Textarea = ({ input, meta, ...props }) => {\r\n//   const hasError = meta.touched && meta.error;\r\n\r\n//   return (\r\n//     <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n//       <div>\r\n//         <textarea {...input} {...props} />\r\n//       </div>\r\n//       {hasError && <span>{meta.error}</span>}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export const Input = ({ input, meta, ...props }) => {\r\n//   const hasError = meta.touched && meta.error;\r\n\r\n//   return (\r\n//     <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n//       <div>\r\n//         <input {...input} {...props} />\r\n//       </div>\r\n//       {hasError && <span>{meta.error}</span>}\r\n//     </div>\r\n//   );\r\n// };\r\n","export const required = (value) => {\r\n  if (value) return undefined;\r\n  return 'Field is required';\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n  return undefined;\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1NNXR\",\"userPhoto\":\"ProfileInfo_userPhoto__yWMww\",\"statusBlock\":\"ProfileInfo_statusBlock__3SAiq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__tewBo\",\"like\":\"Post_like__uZX4v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1x4Hf\",\"postBlock\":\"MyPosts_postBlock__1zPAp\",\"posts\":\"MyPosts_posts__2Xfo7\"};","export default __webpack_public_path__ + \"static/media/avataaars.4186f5f3.png\";","import React, { useState, useEffect } from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]); //принимает зависимость от статуса прищедшего в пропсах и синхронизирует статусы в ЛС и ГС\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n    // setStatus(props.status); //сетаем статус из пропсов, чтобы инпут не обнулялся при переходе с других страниц\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status); //TC передаем статус(текущее значение поля инпута - сидящее в 'локальном' стейте)\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.target.value); //сетаем в ЛС хука текущее значение поля инпута\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!editMode ? (\r\n        <div>\r\n          <span onDoubleClick={activateEditMode}>{props.status || '-----'}</span>\r\n        </div> //копия из ГС(пропсы)\r\n      ) : (\r\n        <div>\r\n          <input\r\n            onChange={onStatusChange}\r\n            onBlur={deactivateEditMode}\r\n            autoFocus={true}\r\n            value={status}></input>\r\n        </div> //вначале копия из ЛС, во время изменения сохранение в локальном стейте обработчик onChange, после потери фокуса deactivateEditMode отпраялем данные на сервер, после ответа сервера меняется ГС и рендер статуса\r\n      )}\r\n    </div> //по условию показываем или статус или поле редактирования\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import Preloader from '../../common/preloader/Preloader';\r\nimport styles from './ProfileInfo.module.css';\r\nimport avataaars from '../../../assets/images/avataaars.png';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks'; //следить за переименованием из FC в CC\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus }) => {\r\n  // if (props.profile === null || props.profile === undefined)\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n  // debugger;\r\n  return (\r\n    <div>\r\n      <div className={styles.descriptionBlock}>\r\n        <img\r\n          className={styles.userPhoto}\r\n          src={profile.photos.large != null ? profile.photos.large : avataaars}\r\n          alt='user avatar'\r\n        />\r\n        <div>\r\n          <span>{profile.fullName}</span>\r\n        </div>\r\n        <div>\r\n          <span>{profile.aboutMe}</span>\r\n        </div>\r\n        <div>\r\n          <span>idUser: {profile.userId}</span>\r\n        </div>\r\n        <div className={styles.statusBlock}>\r\n          <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import styles from './Post.module.css';\r\n\r\nconst Post = (props) => (\r\n  <div className={styles.item}>\r\n    <img\r\n      src='https://e7.pngegg.com/pngimages/57/256/png-clipart-bender-philip-j-fry-computer-icons-leela-bender-smiley-cartoon.png'\r\n      width='60'\r\n      height='60'\r\n      alt='avatar'\r\n    />\r\n    <p>{props.message}</p>\r\n    <div className={styles.like}>\r\n      <img\r\n        src='https://w7.pngwing.com/pngs/49/109/png-transparent-facebook-like-button-giphy-social-network-advertising-facebook-text-hand-rectangle-thumbnail.png'\r\n        width='15'\r\n        height='15'\r\n        alt='like'\r\n      />\r\n      <span>{props.likeCounter}</span>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Post;\r\n","import Post from './Post/Post';\r\nimport styles from './MyPosts.module.css';\r\nimport React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required, maxLengthCreator } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\n\r\nconst AddPostForm = (props) => {\r\n  const { handleSubmit } = props;\r\n  return (\r\n    <form onSubmit={handleSubmit} className={styles.postBlock}>\r\n      <div>\r\n        <Field\r\n          component={Textarea}\r\n          name={'newPostText'}\r\n          placeholder={'Enter your post text'}\r\n          validate={[required, maxLength30]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddPostFormRedux = reduxForm({ form: 'postAddPostForm' })(AddPostForm);\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  // debugger;\r\n  const postsElements = [...props.posts] //иммутабельность - меняем отображение постов на странице не затрагивая исходные данные, а делая копию и ее переворачивая\r\n    .reverse()\r\n    .map((p, i) => <Post key={i} message={p.message} likeCounter={p.likeCounter} />);\r\n\r\n  const addNewPost = (value) => {\r\n    props.addPost(value.newPostText);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <AddPostFormRedux onSubmit={addNewPost} />\r\n      <div className={styles.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n}); //обернули ХОКом мемо, тест, решает проблему с лишними рендерами при неизменившихся пропсах и стейте\r\n\r\nexport default MyPosts;\r\n","import { connect } from 'react-redux';\r\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    },\r\n  };\r\n};\r\n\r\nlet MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import ProfileInfo from './ProfileInfo/ProfileInfo';\r\n// import MyPosts from './MyPosts/MyPosts';\r\n// import classes from './Profile.module.css'\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n// import store from '../../redux/store';\r\n\r\nconst Profile = (props) => {\r\n  // debugger;\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n      />\r\n      <MyPostsContainer\r\n      // store={props.store}\r\n      // posts={props.profilePage.posts}\r\n      // dispatch={props.dispatch}\r\n      // newPostText={props.profilePage.newPostText}\r\n      // updateNewPostText={props.updateNewPostText}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","// import ProfileInfo from './ProfileInfo/ProfileInfo';\r\n// import MyPosts from './MyPosts/MyPosts';\r\n// import classes from './Profile.module.css'\r\n// import MyPostsContainer from './MyPosts/MyPostsContainer';\r\n// import store from '../../redux/store';\r\nimport React from 'react';\r\n// import axios from 'axios';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getStatus, updateStatus } from '../../redux/profile-reducer';\r\nimport { withRouter } from 'react-router';\r\n// import { usersAPI } from '../../api/api';\r\n// import { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n  // debugger;\r\n  componentDidMount() {\r\n    // debugger;\r\n    let userId = this.props.match.params.userId; //объявляем переменную userId которой присваиваем значение из пропсов(которые появились там после оборачивания ХОКом withRouter)\r\n    // let userId = this.props.match.params.userId || 20627;\r\n    if (!userId) {\r\n      userId = this.props.autorizedUserId;\r\n      // userId = 20627;//проверка что userId не null или undefined\r\n      if (!userId) {\r\n        this.props.history.push('/login');\r\n      } //если и в autorizedUserId нет userId тогда переадресация на Логин встроенным методом withRouter\r\n    }\r\n    this.props.getUserProfile(userId); //TC получения профиля\r\n    this.props.getStatus(userId); //TC получения статуса\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n      />\r\n    );\r\n  }\r\n}\r\n//profile={this.props.profile} выше передавать не обязательно, мы уже передаем все пропсы целиком через {...this.props}, сделано для наглядности\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile, //начать с initialState\r\n  status: state.profilePage.status, //начать с initialState\r\n  autorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\n//помещаем в withRouter обертку Auth\r\n// export default connect(mapStateToProps, { getUserProfile })(withRouter(AuthRedirectComponent));//add compose\r\n// export default connect(mapStateToProps, { getUserProfile })(withRouter(ProfileContainer));\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n  withRouter,\r\n  // withAuthRedirect,\r\n)(ProfileContainer); //add compose\r\n"],"sourceRoot":""}