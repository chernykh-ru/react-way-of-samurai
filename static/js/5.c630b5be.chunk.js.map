{"version":3,"sources":["../node_modules/antd/es/divider/index.js","pages/Chat/ChatPage.tsx"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","Divider","props","React","ConfigConsumer","_ref","_classNames","getPrefixCls","direction","customizePrefixCls","prefixCls","_props$type","type","_props$orientation","orientation","className","children","dashed","plain","restProps","orientationPrefix","concat","hasChildren","classString","classNames","_defineProperty","_extends","role","Chat","useState","wsChannel","setWsChannel","useEffect","ws","closeHandler","console","log","setTimeout","createChannel","removeEventListener","close","WebSocket","addEventListener","Messages","messages","setMessages","messageHandler","newMessages","JSON","parse","data","prevMessages","style","height","overflowY","map","m","message","Message","src","photo","width","borderRadius","alt","userName","userId","AddMessageForm","setMessage","readyStatus","setReadyStatus","openHandler","onChange","target","value","disabled","onClick","send","ChatPage"],"mappings":"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","file":"static/js/5.c630b5be.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { ConfigConsumer } from '../config-provider';\n\nvar Divider = function Divider(props) {\n  return /*#__PURE__*/React.createElement(ConfigConsumer, null, function (_ref) {\n    var _classNames;\n\n    var getPrefixCls = _ref.getPrefixCls,\n        direction = _ref.direction;\n\n    var customizePrefixCls = props.prefixCls,\n        _props$type = props.type,\n        type = _props$type === void 0 ? 'horizontal' : _props$type,\n        _props$orientation = props.orientation,\n        orientation = _props$orientation === void 0 ? 'center' : _props$orientation,\n        className = props.className,\n        children = props.children,\n        dashed = props.dashed,\n        plain = props.plain,\n        restProps = __rest(props, [\"prefixCls\", \"type\", \"orientation\", \"className\", \"children\", \"dashed\", \"plain\"]);\n\n    var prefixCls = getPrefixCls('divider', customizePrefixCls);\n    var orientationPrefix = orientation.length > 0 ? \"-\".concat(orientation) : orientation;\n    var hasChildren = !!children;\n    var classString = classNames(prefixCls, \"\".concat(prefixCls, \"-\").concat(type), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-with-text\"), hasChildren), _defineProperty(_classNames, \"\".concat(prefixCls, \"-with-text\").concat(orientationPrefix), hasChildren), _defineProperty(_classNames, \"\".concat(prefixCls, \"-dashed\"), !!dashed), _defineProperty(_classNames, \"\".concat(prefixCls, \"-plain\"), !!plain), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames), className);\n    return /*#__PURE__*/React.createElement(\"div\", _extends({\n      className: classString\n    }, restProps, {\n      role: \"separator\"\n    }), children && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-inner-text\")\n    }, children));\n  });\n};\n\nexport default Divider;","import { Divider } from 'antd';\r\nimport { useEffect, useState } from 'react';\r\n\r\nexport type ChatMessagetype = {\r\n  message: string;\r\n  photo: string;\r\n  userId: number;\r\n  userName: string;\r\n};\r\n\r\nconst ChatPage: React.FC = () => {\r\n  return <Chat />;\r\n};\r\n\r\nconst Chat: React.FC = () => {\r\n  const [wsChannel, setWsChannel] = useState<WebSocket | null>(null);\r\n\r\n  useEffect(() => {\r\n    let ws: WebSocket;\r\n    const closeHandler = () => {\r\n      console.log('close wsChannel');\r\n      setTimeout(createChannel, 5000);\r\n    };\r\n\r\n    function createChannel() {\r\n      ws?.removeEventListener('close', closeHandler);\r\n      ws?.close();\r\n      ws = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx');\r\n      ws?.addEventListener('close', closeHandler);\r\n      setWsChannel(ws);\r\n    }\r\n    createChannel(); //создаем канал\r\n\r\n    return () => {\r\n      ws?.removeEventListener('close', closeHandler);\r\n      ws?.close(); //cleanup функция по зачистке канала\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Messages wsChannel={wsChannel} />\r\n      <AddMessageForm wsChannel={wsChannel} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Messages: React.FC<{ wsChannel: WebSocket | null }> = ({ wsChannel }) => {\r\n  const [messages, setMessages] = useState<ChatMessagetype[]>([]);\r\n\r\n  useEffect(() => {\r\n    let messageHandler = (e: MessageEvent) => {\r\n      const newMessages = JSON.parse(e.data);\r\n      setMessages((prevMessages) => [...prevMessages, ...newMessages]); //иммутабельно добавляем к имеющимся сообщениям новые\r\n      // console.log(JSON.parse(e.data));\r\n    };\r\n    wsChannel?.addEventListener('message', messageHandler);\r\n\r\n    return () => {\r\n      wsChannel?.removeEventListener('message', messageHandler);\r\n    }; //cleanup функция по зачистке канала\r\n  }, [wsChannel]);\r\n\r\n  return (\r\n    <div style={{ height: '400px', overflowY: 'auto' }}>\r\n      {messages.map((m: any, i) => (\r\n        <Message key={i} message={m} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Message: React.FC<{ message: ChatMessagetype }> = ({ message }) => {\r\n  return (\r\n    <div>\r\n      <img src={message.photo} style={{ width: '40px', borderRadius: '50%' }} alt='message' />\r\n      <b>{message.userName} </b>\r\n      <b>id: {message.userId}</b>\r\n      <p>{message.message}</p>\r\n      <Divider />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AddMessageForm: React.FC<{ wsChannel: WebSocket | null }> = ({ wsChannel }) => {\r\n  const [message, setMessage] = useState('');\r\n  const [readyStatus, setReadyStatus] = useState<'pending' | 'ready'>('pending');\r\n\r\n  useEffect(() => {\r\n    let openHandler = () => {\r\n      setReadyStatus('ready');\r\n    };\r\n    wsChannel?.addEventListener('open', openHandler);\r\n\r\n    return () => {\r\n      wsChannel?.removeEventListener('open', openHandler);\r\n    }; //cleanup функция по зачистке канала\r\n  }, [wsChannel]);\r\n\r\n  const sendMessage = () => {\r\n    if (!message) {\r\n      return; //проверка что сообщение есть\r\n    }\r\n    wsChannel?.send(message); //отправляем сообщение из локального стейта(from textarea)\r\n    setMessage(''); //зануялем\r\n  };\r\n  return (\r\n    <div>\r\n      <div>\r\n        <textarea onChange={(e) => setMessage(e.target.value)} value={message}></textarea>\r\n      </div>\r\n      <div>\r\n        <button disabled={wsChannel === null || readyStatus !== 'ready'} onClick={sendMessage}>\r\n          send\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatPage;\r\n"],"sourceRoot":""}